// <auto-generated />
using System;
using BackendBootcamp.Homework.Week2.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendBootcamp.Homework.Week2.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackendBootcamp.Homework.Week2.Core.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "George Orwell",
                            Price = 19.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7831),
                            Title = "1984"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Harper Lee",
                            Price = 14.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7843),
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 3,
                            Author = "F. Scott Fitzgerald",
                            Price = 10.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7845),
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Herman Melville",
                            Price = 15.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7846),
                            Title = "Moby Dick"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Leo Tolstoy",
                            Price = 20.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7847),
                            Title = "War and Peace"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Jane Austen",
                            Price = 9.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7848),
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 7,
                            Author = "J.D. Salinger",
                            Price = 12.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7850),
                            Title = "The Catcher in the Rye"
                        },
                        new
                        {
                            Id = 8,
                            Author = "J.R.R. Tolkien",
                            Price = 14.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7851),
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 9,
                            Author = "James Joyce",
                            Price = 16.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7853),
                            Title = "Ulysses"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Homer",
                            Price = 18.99m,
                            PublicationDate = new DateTime(2024, 5, 18, 21, 57, 37, 989, DateTimeKind.Local).AddTicks(7854),
                            Title = "The Odyssey"
                        });
                });

            modelBuilder.Entity("BackendBootcamp.Homework.Week2.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BirthYear")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            BirthYear = 1985,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            BirthYear = 1990,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            BirthYear = 1975,
                            Email = "michael.johnson@example.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            PhoneNumber = "555-555-5555"
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Pine St",
                            BirthYear = 1988,
                            Email = "emily.davis@example.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            PhoneNumber = "444-444-4444"
                        },
                        new
                        {
                            Id = 5,
                            Address = "202 Maple St",
                            BirthYear = 1992,
                            Email = "david.brown@example.com",
                            FirstName = "David",
                            LastName = "Brown",
                            PhoneNumber = "333-333-3333"
                        },
                        new
                        {
                            Id = 6,
                            Address = "303 Cedar St",
                            BirthYear = 1980,
                            Email = "linda.taylor@example.com",
                            FirstName = "Linda",
                            LastName = "Taylor",
                            PhoneNumber = "222-222-2222"
                        },
                        new
                        {
                            Id = 7,
                            Address = "404 Birch St",
                            BirthYear = 1970,
                            Email = "james.anderson@example.com",
                            FirstName = "James",
                            LastName = "Anderson",
                            PhoneNumber = "111-111-1111"
                        },
                        new
                        {
                            Id = 8,
                            Address = "505 Spruce St",
                            BirthYear = 1983,
                            Email = "sarah.thomas@example.com",
                            FirstName = "Sarah",
                            LastName = "Thomas",
                            PhoneNumber = "666-666-6666"
                        },
                        new
                        {
                            Id = 9,
                            Address = "606 Fir St",
                            BirthYear = 1995,
                            Email = "christopher.moore@example.com",
                            FirstName = "Christopher",
                            LastName = "Moore",
                            PhoneNumber = "777-777-7777"
                        },
                        new
                        {
                            Id = 10,
                            Address = "707 Redwood St",
                            BirthYear = 1987,
                            Email = "laura.martin@example.com",
                            FirstName = "Laura",
                            LastName = "Martin",
                            PhoneNumber = "888-888-8888"
                        });
                });

            modelBuilder.Entity("BackendBootcamp.Homework.Week2.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Alice",
                            GrossSalary = 75000m,
                            LastName = "Johnson",
                            Title = "Software Engineer"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Bob",
                            GrossSalary = 85000m,
                            LastName = "Smith",
                            Title = "Project Manager"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Charlie",
                            GrossSalary = 60000m,
                            LastName = "Brown",
                            Title = "QA Engineer"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Diana",
                            GrossSalary = 95000m,
                            LastName = "Prince",
                            Title = "Product Owner"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Eve",
                            GrossSalary = 70000m,
                            LastName = "Davis",
                            Title = "Business Analyst"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Frank",
                            GrossSalary = 80000m,
                            LastName = "Miller",
                            Title = "DevOps Engineer"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Grace",
                            GrossSalary = 65000m,
                            LastName = "Lee",
                            Title = "UI/UX Designer"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Hank",
                            GrossSalary = 77000m,
                            LastName = "Williams",
                            Title = "Database Administrator"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Ivy",
                            GrossSalary = 68000m,
                            LastName = "Taylor",
                            Title = "HR Manager"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Jack",
                            GrossSalary = 55000m,
                            LastName = "Wilson",
                            Title = "IT Support Specialist"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
